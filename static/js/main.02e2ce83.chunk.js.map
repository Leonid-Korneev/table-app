{"version":3,"sources":["Components/DataChooser/DataChooser.module.css","Components/SearchForm/SearchForm.module.css","serviceWorker.js","Components/DataChooser/DataChooser.jsx","Components/AddForm/AddForm.jsx","Components/Paginator/Paginator.jsx","Components/SearchForm/SearchForm.jsx","Components/Table/Table.jsx","Components/Preloader/Preloader.jsx","Components/UserInfo/UserInfo.jsx","api/apiRequests.js","Components/App/App.jsx","AppContaner.jsx","index.js","Components/UserInfo/UserInfo.module.css","Components/Paginator/Paginator.module.css","Components/Table/Table.module.css","Components/AddForm/AddForm.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","DataChooser","props","className","s","container","title","buttons","type","button","onClick","setDataSize","AddForm","addUser","dataLength","useState","addMode","setAddMode","useForm","mode","register","handleSubmit","formState","addForm","onSubmit","data","e","target","reset","addForm__item","ref","required","name","min","defaultValue","placeholder","disabled","isValid","Paginator","currentPage","onPageChangeClick","portionSize","setCurrentPage","usersPerPage","totalUsersCount","currentPortion","setCurrentPortion","totalPages","Math","ceil","lastPortion","firstItemInPortion","lastItemInPortion","pagesArr","i","push","item","selected","bind","key","pagination","slice","SearchForm","getFilteredData","searchString","searchField","sumbit","Table","onRowClick","setTotalUsersCount","dataClone","setData","isAscSorting","setSorting","filteredData","setFilteredData","useEffect","length","sortData","sortProperty","sort","a","b","user","subStr","filter","toString","toLowerCase","includes","table_header","map","tableRow","id","phone","firstName","lastName","email","page","Preloader","UserInfo","address","streetAddress","city","state","zip","description","description__container","description__item","description__item__info","apiRequests","axios","App","isLoading","setIsLoading","selectedUser","setSelectedUser","dataSize","then","response","AppContainer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02e2ce83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"DataChooser_title__VVhJE\",\"container\":\"DataChooser_container__1PvPV\",\"buttons\":\"DataChooser_buttons__mevdO\",\"button\":\"DataChooser_button__3bHF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchForm_container__lNZet\",\"sumbit\":\"SearchForm_sumbit__k8IHN\",\"searchField\":\"SearchForm_searchField__1M52i\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport s from \"./DataChooser.module.css\"\r\n\r\n\r\nexport const DataChooser = (props)=> {\r\n    return (\r\n        <div className={s.container}>\r\n            <h2 className={s.title}>How much data do you want to get? </h2>\r\n            <div className={s.buttons}>\r\n                <button type=\"button\" className={s.button + \" \" + \"btn btn-primary\"} onClick={()=> {props.setDataSize(\"big\")}}>A lot of data</button>\r\n                <button  type=\"button\" className=\"btn btn-primary\" onClick={()=> {props.setDataSize(\"small\")}}>A little bit of data</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}","\r\nimport React, { useState} from \"react\";\r\n\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from \"./AddForm.module.css\"\r\n\r\n\r\nexport const AddForm = ({addUser, dataLength}) => {\r\n\r\n    let [addMode, setAddMode] = useState(false)\r\n    const { register, handleSubmit, formState  } = useForm({mode:\"onChange\"});\r\n\r\n\r\n    const onSubmit = (data, e) => {\r\n\r\n         addUser(data)\r\n        e.target.reset()\r\n        setAddMode(false)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n    <div className={s.addForm}> {(!addMode) ? <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n        setAddMode(true)\r\n    }}> Add new user</button> : <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input    className={s.addForm__item}   ref={register({ required: true})} name=\"id\" type=\"number\" min={dataLength} defaultValue={dataLength} placeholder=\"ID\"/>\r\n        <input   className={s.addForm__item}  ref={register({ required: true})} name=\"firstName\" type=\"text\" placeholder=\"First Name \"/>\r\n        <input  className={s.addForm__item}  ref={register({ required: true})} name=\"lastName\" type=\"text\" placeholder=\"Last Name \"/>\r\n        <input   className={s.addForm__item} ref={register({ required: true})} name=\"email\" type=\"email\" placeholder=\"Email\"/>\r\n        <input  className={s.addForm__item}  ref={register({ required: true})} name=\"phone\" type=\"text\" placeholder=\"Phone\"/>\r\n        <button  className=\"btn btn-primary\" type=\"submit\" disabled={!formState.isValid}>Add</button>\r\n\r\n    </form>}</div>)\r\n\r\n}\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\n\r\n\r\nexport const Paginator = ({currentPage, onPageChangeClick, portionSize = 10, setCurrentPage, usersPerPage, totalUsersCount}) => {\r\n\r\n    let [currentPortion, setCurrentPortion] = useState(1)\r\n    let totalPages = Math.ceil(totalUsersCount / usersPerPage)\r\n    let lastPortion = Math.ceil(totalPages / portionSize)\r\n    let firstItemInPortion = ((currentPortion - 1) * portionSize)\r\n    let lastItemInPortion = (currentPortion * portionSize)\r\n\r\n\r\n    const onPreviousBtnClick = () => {\r\n        setCurrentPortion(currentPortion - 1)\r\n        setCurrentPage((currentPortion - 1) * portionSize)\r\n    }\r\n    const onNextBtnClick = () => {\r\n        setCurrentPortion(currentPortion + 1)\r\n        setCurrentPage(currentPortion * portionSize + 1)\r\n\r\n\r\n    }\r\n\r\n    let pagesArr = []\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pagesArr.push(<label className={s.item + \" \" + ((currentPage === i) ? s.selected : null)}\r\n                             onClick={onPageChangeClick.bind(null, i)} key={i}>{i}</label>)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.pagination}>\r\n            {currentPortion > 1 ? <button type=\"button\" className={s.item + s.button + \" \" + \"btn btn-primary\"}\r\n                                          onClick={onPreviousBtnClick}> Prev </button> : null}\r\n            <div>  {pagesArr.slice(firstItemInPortion, lastItemInPortion)}</div>\r\n            {currentPortion === lastPortion ? null : <button className={s.item + s.button + \" \" + \"btn btn-primary\"}\r\n                                                             onClick={onNextBtnClick}> Next </button>}\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from \"./SearchForm.module.css\"\r\n\r\n\r\nexport const SearchForm = ({getFilteredData,setCurrentPage}) => {\r\n    const { register, handleSubmit,  } = useForm();\r\n    const onSubmit = data => {\r\n        setCurrentPage(1)\r\n        getFilteredData(data.searchString)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n       <form onSubmit={handleSubmit(onSubmit)}>\r\n           <div className={s.container}>\r\n            <input className={s.searchField} name=\"searchString\"  ref={register} type=\"text\"  placeholder=\"SearchFor...\"  />\r\n            <button className={s.sumbit + \" \" + \"btn btn-primary\"} type=\"submit\">Search</button>\r\n           </div>\r\n        </form>\r\n\r\n\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./Table.module.css\"\r\nimport {AddForm} from \"../AddForm/AddForm\";\r\nimport {Paginator} from \"../Paginator/Paginator\";\r\nimport {SearchForm} from \"../SearchForm/SearchForm\";\r\n\r\nconst Table = ({data, onRowClick, totalPages, totalUsersCount, setTotalUsersCount, usersPerPage = 15}) => {\r\n\r\n    const [dataClone, setData] = useState(data)\r\n    const [isAscSorting, setSorting] = useState(false)\r\n    const [filteredData, setFilteredData] = useState(dataClone)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        setTotalUsersCount(filteredData.length)\r\n    }, [filteredData])\r\n\r\n\r\n    function onPageChangeClick(page) {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n\r\n    const addUser = (user) => {\r\n        setData([{...user}, ...dataClone])\r\n        setFilteredData([{...user}, ...dataClone])\r\n    }\r\n\r\n\r\n    const sortData = (sortProperty) => {\r\n        if (isAscSorting) {\r\n            setFilteredData([...filteredData.sort((a, b) => {\r\n                return a[`${sortProperty}`] > b[`${sortProperty}`] ? -1 : 1\r\n            })])\r\n        } else {\r\n            setFilteredData([...filteredData.sort((a, b) => {\r\n                return a[`${sortProperty}`] > b[`${sortProperty}`] ? 1 : -1\r\n            })])\r\n        }\r\n\r\n\r\n        setSorting(!isAscSorting)\r\n\r\n    }\r\n\r\n    const getFilteredData = (subStr) => {\r\n        setFilteredData(\r\n            [...dataClone].filter(user => {\r\n\r\n                return user['firstName'].toString().toLowerCase().includes(subStr.toLowerCase()) ||\r\n                    user['lastName'].toString().toLowerCase().includes(subStr.toLowerCase()) ||\r\n                    user['id'].toString().toLowerCase().includes(subStr.toLowerCase()) ||\r\n                    user['email'].toString().toLowerCase().includes(subStr.toLowerCase())\r\n\r\n\r\n            })\r\n        )\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <AddForm addUser={addUser} dataLength={data ? dataClone.length : 0}/>\r\n            <SearchForm setCurrentPage={setCurrentPage} getFilteredData={getFilteredData}/>\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th className={s.table_header} onClick={sortData.bind(null, \"id\")}>ID {}</th>\r\n                    <th className={s.table_header} onClick={sortData.bind(null, \"firstName\")}>First Name</th>\r\n                    <th className={s.table_header} onClick={sortData.bind(null, \"lastName\")}>Last Name</th>\r\n                    <th className={s.table_header} onClick={sortData.bind(null, \"email\")}>Email</th>\r\n                    <th className={s.table_header} onClick={sortData.bind(null, \"phone\")}>Phone</th>\r\n                </tr>\r\n\r\n                {data ? (filteredData.map(user => (\r\n                    <tr className={s.tableRow} key={user.id + user.phone} onClick={onRowClick.bind(null, user)}>\r\n                        <th>{user.id}</th>\r\n                        <td>{user.firstName}</td>\r\n                        <td>{user.lastName}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.phone}</td>\r\n\r\n                    </tr>))).slice((currentPage - 1) * usersPerPage, currentPage * usersPerPage) : null}\r\n                </thead>\r\n                <tbody>\r\n\r\n                </tbody>\r\n            </table>\r\n            {totalUsersCount ?\r\n                <Paginator usersPerPage={usersPerPage} currentPage={currentPage} totalPages={totalPages}\r\n                           totalUsersCount={totalUsersCount}\r\n                           setCurrentPage={setCurrentPage} onPageChangeClick={onPageChangeClick}/> : null}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import React from \"react\";\r\nimport \"./Preloader.css\"\r\nexport const Preloader = ()=> {\r\n\r\n    return ( <div className=\"preloader-container\"><div className=\"lds-dual-ring\"/></div>)\r\n}","import React from \"react\";\r\nimport s from \"./UserInfo.module.css\"\r\nexport const UserInfo = ({user}) => {\r\n\r\n    const {streetAddress, city, state, zip } = user.address ?? {}\r\n    const {firstName,lastName,description } = user\r\n\r\n    return (<div className={s.description__container}>\r\n       <div className={s.description__item}>  Выбран пользователь: <b>{firstName + \" \" +  lastName}</b></div>\r\n        { description ? <div className={s.description__item}> Описание:\r\n            <textarea className={s.description__item__info}>\r\n              {description}\r\n        </textarea></div> : null}\r\n\r\n        { streetAddress ? <div className={s.description__item}>Адрес проживания: <b>{streetAddress}</b></div> : null}\r\n        { city ? <div className={s.description__item}> Город: <b>{city}</b></div> : null}\r\n        { state ? <div className={s.description__item}>Провинция/штат: <b>{state}</b></div> : null}\r\n        {zip ? <div className={s.description__item}>Индекс: <b>{zip}</b></div> : null}\r\n\r\n    </div>)\r\n}\r\n\r\n\r\n\r\n\r\n","import * as axios from \"axios\";\r\n\r\n\r\nexport const apiRequests = {\r\n    getSmallData () {\r\n     return   axios.get(\"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\")\r\n    },\r\n\r\n    getBigData() {\r\n        return axios.get(\"http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\")\r\n    }\r\n\r\n}","import React, {useEffect, useState} from 'react';\r\nimport Table from \"../Table/Table\";\r\nimport {Preloader} from \"../Preloader/Preloader\";\r\nimport {UserInfo} from \"../UserInfo/UserInfo\";\r\nimport {apiRequests} from \"../../api/apiRequests\";\r\n\r\n\r\nfunction App(props) {\r\n\r\n    const [data, setData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [selectedUser, setSelectedUser] = useState(null)\r\n    const [totalUsersCount, setTotalUsersCount] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        let dataRequest\r\n        setIsLoading(true)\r\n        if (props.dataSize === \"small\")\r\n            dataRequest = apiRequests.getSmallData()\r\n        else dataRequest = apiRequests.getBigData()\r\n\r\n        dataRequest.then((response) => {\r\n            setTotalUsersCount(response.data.length)\r\n            setData({data: response.data})\r\n            setIsLoading(false)\r\n        })\r\n\r\n\r\n    }, [props.dataSize])\r\n\r\n    const onRowClick = (user) => {\r\n        setSelectedUser(user)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {!isLoading ? <Table data={data.data} onRowClick={onRowClick} setTotalUsersCount={setTotalUsersCount}  totalUsersCount={totalUsersCount}/> :\r\n                <Preloader/>}\r\n            {selectedUser ? <UserInfo user={selectedUser}/> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React, {useState} from \"react\";\r\nimport {DataChooser} from \"./Components/DataChooser/DataChooser\";\r\nimport App from \"./Components/App/App\";\r\n\r\n\r\nexport const AppContainer = () => {\r\n    const [dataSize, setDataSize] = useState(null)\r\n    return !dataSize ? <DataChooser setDataSize={setDataSize}/> : <App dataSize={dataSize}/>\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {AppContainer} from \"./AppContaner\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContainer />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description__container\":\"UserInfo_description__container__3lRqW\",\"description__item\":\"UserInfo_description__item__3wcoJ\",\"description__item__info\":\"UserInfo_description__item__info__273Ns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__2vxDj\",\"item\":\"Paginator_item__1wZbc\",\"selected\":\"Paginator_selected__2Uxgn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"Table_tableRow__2T_QL\",\"button\":\"Table_button__VsRT1\",\"table_header\":\"Table_table_header__VFwwN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addForm__item\":\"AddForm_addForm__item__23fNC\",\"addForm\":\"AddForm_addForm__2Zsar\"};"],"sourceRoot":""}